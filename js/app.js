(function() {
  /*
  000   000  000   000  000   000         0000000   00000000   00000000   
  000 0 000   000 000   000 0 000        000   000  000   000  000   000  
  000000000    00000    000000000        000000000  00000000   00000000   
  000   000   000 000   000   000        000   000  000        000        
  00     00  000   000  00     00        000   000  000        000        
  */
  var Menu, _, about, action, app, args, childp, electron, error, karg, log, minimizeWindow, moveWindow, pkg, post, prefs, rect, ref, showAbout, slash, tray, user, wininfo;

  ({post, prefs, about, slash, childp, karg, error, log, _} = require('kxk'));

  user = require('./user');

  wininfo = require('./wininfo');

  rect = require('./rect');

  ref = require('ref');

  pkg = require('../package.json');

  electron = require('electron');

  app = electron.app;

  Menu = electron.Menu;

  tray = null;

  args = karg(`wxw\n    debug  . ? log debug    . = false . - D\n\nversion  ${pkg.version}`);

  // args.debug = true
  post.on('winlog', function(text) {
    return log(">>> " + text);
  });

  //  0000000    0000000  000000000  000   0000000   000   000  
  // 000   000  000          000     000  000   000  0000  000  
  // 000000000  000          000     000  000   000  000 0 000  
  // 000   000  000          000     000  000   000  000  0000  
  // 000   000   0000000     000     000   0000000   000   000  
  action = function(act) {
    switch (act) {
      case 'minimize':
        return minimizeWindow();
      case 'screenzoom':
        return require('./screenzoom').start();
      default:
        return moveWindow(act);
    }
  };

  
  // 00     00  000  000   000  000  00     00  000  0000000  00000000  
  // 000   000  000  0000  000  000  000   000  000     000   000       
  // 000000000  000  000 0 000  000  000000000  000    000    0000000   
  // 000 0 000  000  000  0000  000  000 0 000  000   000     000       
  // 000   000  000  000   000  000  000   000  000  0000000  00000000  
  minimizeWindow = function() {
    var SW_MINIMIZE, ensureFocusWindow, hWnd;
    ensureFocusWindow = function() {
      if (!user.GetForegroundWindow()) {
        return log('no focus window!');
      }
    };
    if (hWnd = user.GetForegroundWindow()) {
      SW_MINIMIZE = 6;
      user.ShowWindow(hWnd, SW_MINIMIZE);
      return setTimeout(ensureFocusWindow, 50);
    }
  };

  
  // 00     00   0000000   000   000  00000000  
  // 000   000  000   000  000   000  000       
  // 000000000  000   000   000 000   0000000   
  // 000 0 000  000   000     000     000       
  // 000   000   0000000       0      00000000  
  moveWindow = function(dir) {
    var SWP_NOZORDER, ar, b, base, d, h, hWnd, info, sb, sl, sr, st, w, wr, x, y;
    ar = rect.workarea();
    if (hWnd = user.GetForegroundWindow()) {
      info = wininfo(hWnd);
      base = slash.base(info.path);
      if (base === 'electron' || base === 'ko' || base === 'konrad' || base === 'clippo' || base === 'klog' || base === 'kaligraf' || base === 'kalk' || base === 'uniko' || base === 'knot' || base === 'Hyper') {
        b = 0; // sane window border
      } else {
        b = 10.9; // transparent window border
      }
      wr = rect.window(hWnd);
      d = 2 * b;
      [x, y, w, h] = (function() {
        switch (dir) {
          case 'left':
            return [-b, 0, ar.w / 2 + d, ar.h + b];
          case 'right':
            return [ar.w / 2 - b, 0, ar.w / 2 + d, ar.h + b];
          case 'down':
            return [ar.w / 4 - b, 0, ar.w / 2 + d, ar.h + b];
          case 'up':
            return [ar.w / 6 - b, 0, 2 / 3 * ar.w + d, ar.h + b];
          case 'topleft':
            return [-b, 0, ar.w / 3 + d, ar.h / 2];
          case 'top':
            return [ar.w / 3 - b, 0, ar.w / 3 + d, ar.h / 2];
          case 'topright':
            return [2 / 3 * ar.w - b, 0, ar.w / 3 + d, ar.h / 2];
          case 'botleft':
            return [-b, ar.h / 2 - b, ar.w / 3 + d, ar.h / 2 + d];
          case 'bot':
            return [ar.w / 3 - b, ar.h / 2 - b, ar.w / 3 + d, ar.h / 2 + d];
          case 'botright':
            return [2 / 3 * ar.w - b, ar.h / 2 - b, ar.w / 3 + d, ar.h / 2 + d];
        }
      })();
      sl = 20 > Math.abs(wr.x - x);
      sr = 20 > Math.abs(wr.x + wr.w - (x + w));
      st = 20 > Math.abs(wr.y - y);
      sb = 20 > Math.abs(wr.y + wr.h - (y + h));
      if (sl && sr && st && sb) {
        switch (dir) {
          case 'left':
            w = ar.w / 4 + d;
            break;
          case 'right':
            w = ar.w / 4 + d;
            x = 3 * ar.w / 4 - b;
            break;
          case 'down':
            h = ar.h / 2 + d;
            y = ar.h / 2 - b;
            break;
          case 'up':
            w = ar.w + d;
            x = -b;
        }
      }
      SWP_NOZORDER = 0x4;
      user.RestoreWindow(hWnd);
      return user.SetWindowPos(hWnd, null, x, y, w, h, SWP_NOZORDER);
    }
  };

  
  //  0000000   0000000     0000000   000   000  000000000  
  // 000   000  000   000  000   000  000   000     000     
  // 000000000  0000000    000   000  000   000     000     
  // 000   000  000   000  000   000  000   000     000     
  // 000   000  0000000     0000000    0000000      000     
  showAbout = function() {
    return about({
      img: `${__dirname}/../img/about.png`,
      background: "#222",
      size: 300,
      pkg: pkg
    });
  };

  app.on('window-all-closed', function(event) {
    return event.preventDefault();
  });

  
  // 00000000   00000000   0000000   0000000    000   000
  // 000   000  000       000   000  000   000   000 000 
  // 0000000    0000000   000000000  000   000    00000  
  // 000   000  000       000   000  000   000     000   
  // 000   000  00000000  000   000  0000000       000   
  app.on('ready', function() {
    var a, i, keys, len, ref1, ref2, results;
    tray = new electron.Tray(`${__dirname}/../img/menu.png`);
    tray.on('click', showAbout);
    tray.on('double-click', function() {
      app.exit(0);
      return process.exit(0);
    });
    tray.setContextMenu(Menu.buildFromTemplate([
      {
        label: "Quit",
        click: function() {
          app.exit(0);
          return process.exit(0);
        }
      },
      {
        label: "About",
        click: showAbout
      }
    ]));
    if ((ref1 = app.dock) != null) {
      ref1.hide();
    }
    keys = {
      left: 'ctrl+alt+left',
      right: 'ctrl+alt+right',
      up: 'ctrl+alt+up',
      down: 'ctrl+alt+down',
      topleft: 'ctrl+alt+1',
      botleft: 'ctrl+alt+2',
      topright: 'ctrl+alt+3',
      botright: 'ctrl+alt+4',
      top: 'ctrl+alt+5',
      bot: 'ctrl+alt+6',
      minimize: 'ctrl+alt+m',
      screenzoom: 'alt+z'
    };
    prefs.init(keys);
    if (!slash.isFile(prefs.store.file)) {
      prefs.save();
    }
    ref2 = _.keys(keys);
    results = [];
    for (i = 0, len = ref2.length; i < len; i++) {
      a = ref2[i];
      results.push(electron.globalShortcut.register(prefs.get(a), (function(a) {
        return function() {
          return action(a);
        };
      })(a)));
    }
    return results;
  });

  if (args.debug) {
    require('./screenzoom').start({
      debug: true
    });
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/app.coffee